(()=>{
  if(window.__followBot){alert('Already running');return}
  window.__followBot=true;

  const S={
    run:true,delay:650,scrollDelay:900,empty:0,scrolls:0,totalFollow:0,totalSurf:0,
    clickedFollows:new Set(),
    visited:new Set((()=>{try{return JSON.parse(localStorage.getItem('__clipVisited__')||'[]')}catch{return[]}})())
  };
  const save=()=>{try{localStorage.setItem('__clipVisited__',JSON.stringify([...S.visited].slice(-500)))}catch{}};
  const C={red:'#ef4444',redDim:'#b91c1c',blue:'#3b82f6',bg:'rgba(14,14,16,.88)',card:'0 8px 30px rgba(0,0,0,.35)'};
  const sleep=ms=>new Promise(r=>setTimeout(r,ms));
  const QQ=s=>Array.from(document.querySelectorAll(s));
  const txt=e=>(e?.textContent||'').replace(/\s+/g,'').trim();

  // ===== UI =====
  const ui=document.createElement('div');
  ui.style.cssText='position:fixed;right:12px;bottom:12px;z-index:2147483647;background:'+C.bg+
    ';backdrop-filter:blur(6px);color:#fff;padding:12px 14px;border-radius:14px;box-shadow:'+C.card+
    ';font:12px/1.45 -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial;min-width:200px;text-align:center';
  ui.innerHTML=`
    <div style="margin-bottom:10px;border-bottom:1px solid rgba(255,255,255,.16);padding-bottom:8px;font-size:11px">
      블라이, '상위노출' 분석 서비스 :
      <a href="https://blai.co.kr?invite=늑대왕" target="_blank" rel="noopener" style="color:#9ccfff;text-decoration:underline">바로가기</a>
    </div>
    <div style="display:flex;align-items:center;justify-content:center;gap:8px;margin-bottom:4px">
      <b style="font-size:13px">Clip Follow Surfer</b>
      <span id="bdg" style="padding:2px 8px;border-radius:999px;background:#10b981;color:#052;font-weight:700;font-size:10px;letter-spacing:.25px">서핑중</span>
    </div>
    <div id="st" style="opacity:.95"></div>
    <div id="btnRow" style="margin-top:8px;display:flex;gap:6px;flex-wrap:wrap;justify-content:center">
      <button id="p" style="flex:1 1 auto;width:80%;padding:4px 10px;border:0;border-radius:10px;font-weight:700;cursor:pointer;box-shadow:0 1px 0 rgba(255,255,255,.07) inset,0 2px 10px rgba(0,0,0,.25);transition:transform .08s ease,filter .15s ease,opacity .2s ease">Stop</button>
      <button id="c" style="flex:1 1 auto;width:38%;padding:4px 10px;border:0;border-radius:10px;font-weight:700;cursor:pointer;box-shadow:0 1px 0 rgba(255,255,255,.07) inset,0 2px 10px rgba(0,0,0,.25);transition:transform .08s ease,filter .15s ease,opacity .2s ease;display:none">Close</button>
    </div>
    <div style="margin-top:10px;border-top:1px solid rgba(255,255,255,.16);padding-top:4px;font-size:10px;opacity:.7">
      배포 : 2025.08.13 23:38
    </div>
  `;
  document.body.appendChild(ui);
  const ST=ui.querySelector('#st'),pBtn=ui.querySelector('#p'),cBtn=ui.querySelector('#c'),BDG=ui.querySelector('#bdg');
  const setBtnColor=(btn,bg)=>{btn.style.background=bg;btn.style.color='#fff'};
  const render=()=>{ST.textContent=`팔로우:${S.totalFollow} | 파도:${S.totalSurf}`};
  const setRunning=()=>{S.run=true;pBtn.textContent='Stop';setBtnColor(pBtn,C.red);pBtn.style.width='80%';cBtn.style.display='none';BDG.textContent='서핑중';BDG.style.background='#10b981';render()};
  const setPaused =()=>{S.run=false;pBtn.textContent='Resume';setBtnColor(pBtn,C.blue);pBtn.style.width='38%';cBtn.style.display='inline-block';setBtnColor(cBtn,C.redDim);BDG.textContent='휴식중';BDG.style.background='#f59e0b';render()};
  pBtn.onclick=()=>{S.run?setPaused():setRunning()};
  cBtn.onclick=()=>{try{clearInterval(loop)}catch{};try{clearInterval(scroller)}catch{};try{obs&&obs.disconnect()}catch{};window.__followBot=false;ui.remove()};
  addEventListener('keydown',e=>{if(e.key==='Escape')pBtn.click()});
  setRunning();

  // ===== Helpers =====
  const vis=e=>{if(!e) return false; const r=e.getBoundingClientRect(); return r.bottom>=-60 && r.top<=innerHeight+60};
  const getHandle=()=>{const m=location.pathname.match(/\/@([^/]+)/);return m?decodeURIComponent(m[1]):null};
  const markCurrent=()=>{const h=getHandle();if(h){S.visited.add(h);save()}}; markCurrent();

  const extractIdFromEl=(el)=>{
    if(!el) return null;
    // 1) href에서 @id
    const href=(el.getAttribute && el.getAttribute('href'))||'';
    const mh=href.match(/\/@([^/?#]+)/);
    if(mh) return decodeURIComponent(mh[1]);
    // 2) 인접 텍스트 블록에서 아이디 후보
    const idNode=el.closest('li')?.querySelector('[class*="txt_area"],[class*="tit_area"]');
    if(idNode){
      const raw=(idNode.innerText||idNode.textContent||'').trim().replace(/^@/,'').replace(/\s+/g,'');
      if(/^[A-Za-z0-9._-]{3,32}$/.test(raw)) return raw;
    }
    // 3) 자체 텍스트에서 @id
    const t=(el.innerText||el.textContent||'').trim();
    const mt=t.match(/@([A-Za-z0-9._-]{3,32})/);
    if(mt) return mt[1];
    return null;
  };

  // 핵심: 전수 스캔 (보이든 말든 모두 수집) + 강한 조건식
  function findAllFollowBtns(){
    const nodes = QQ('a[role="button"],button,[role="button"]');
    const out = [];
    for(const b of nodes){
      const t = (b.innerText||b.textContent||'').trim();
      const norm = t.replace(/\s+/g,'');
      const isFollowText = /팔로우/.test(norm) && !/팔로잉|팔로우중|Following/i.test(t);
      const isFollowClass = /\bfollow\b/i.test(b.className) || /btn_follow/i.test(b.className);
      const isAria = b.getAttribute('aria-pressed')==='false' || b.getAttribute('aria-label')==='팔로우';
      const disabled = b.closest('[disabled],[aria-disabled="true"]');
      if(!disabled && (isFollowText || isFollowClass || isAria)){
        out.push(b);
      }
    }
    return out;
  }

  // 가까운 것부터 클릭(놓침 방지) + 중복 방지
  async function clickAllFollows(){
    let n=0;
    const btns = findAllFollowBtns()
      .filter(b => !b.dataset.__cf_clicked) // 같은 노드 재클릭 방지
      .map(b => ({b, id: extractIdFromEl(b.closest('li')) || txt(b), dist: Math.abs((b.getBoundingClientRect?.().top||0) - innerHeight/2)}))
      .filter(x => x.id && !S.clickedFollows.has(x.id))
      .sort((a,b)=>a.dist-b.dist); // 화면 중앙에 가까운 것부터

    for(const {b,id} of btns){
      // 여전히 팔로우 상태인지 재검증 (동적 변경 대비)
      const nowText = (b.innerText||b.textContent||'').trim();
      if(/팔로잉|팔로우중|Following/i.test(nowText)) { S.clickedFollows.add(id); b.dataset.__cf_clicked='1'; continue; }

      S.clickedFollows.add(id);
      b.dataset.__cf_clicked='1';

      b.scrollIntoView({block:'center'});
      b.dispatchEvent(new MouseEvent('mouseover',{bubbles:true}));
      b.dispatchEvent(new MouseEvent('mousedown',{bubbles:true}));
      b.click();
      b.dispatchEvent(new MouseEvent('mouseup',{bubbles:true}));

      S.totalFollow++; n++;
      await sleep(S.delay);
    }
    S.empty = n ? 0 : S.empty+1;
    return n;
  }

  function gotoFollowerTabIfSeen(){
    const cand=QQ('a,button,[role="button"]').find(el=>/팔로워/i.test(el.textContent||''));
    if(cand){cand.click();return true}
    return false;
  }

  // 파도타기: 랜덤 후보 (화면에 보이는 li 우선)
  function randomProfileCandidate(){
    const listSel='li[class*="UIProfileListItem_list_item"],li[class^="UIProfileListItem_list_item"]';
    let items=QQ(listSel);
    if(!items.length) return null;
    // 보이는 항목 우선, 없으면 전체
    const visItems=items.filter(vis);
    const pool = visItems.length ? visItems : items;
    const li = pool[Math.floor(Math.random()*pool.length)];
    const link=li.querySelector('a[href^="/@"],a[href*="/@"],a[role="button"],[role="button"]') || li;
    const id=extractIdFromEl(link)||extractIdFromEl(li);
    return id?{id,link}:null;
  }

  async function surfNextProfile(){
    const cand=randomProfileCandidate();
    if(!cand) return false;
    S.totalSurf++;
    cand.link.scrollIntoView({block:'center'});
    cand.link.click();
    await sleep(500);
    gotoFollowerTabIfSeen();
    return true;
  }

  // 자동 스크롤(너무 크게 이동하지 않도록)
  let lastH=0,stuck=0;
  const scroller=setInterval(()=>{
    if(!S.run) return;
    scrollBy(0,Math.floor(innerHeight*0.6)); // 과도한 점프 방지
    S.scrolls++;
    const h=document.documentElement.scrollHeight;
    if(h===lastH) stuck++; else {stuck=0;lastH=h}
    if(stuck>6){scrollTo(0,0);stuck=0}
  },S.scrollDelay);

  // DOM 변동 감지: 프로필 페이지 진입 시 팔로워 탭 보이면 바로 클릭
  const obs=new MutationObserver(()=>{
    const h=getHandle();
    if(h && !S.visited.has(h)){S.visited.add(h);save()}
    if(QQ('[class*="UIProfileInfo"],[class*="UIProfileHeader"]').length){
      gotoFollowerTabIfSeen();
    }
  });
  obs.observe(document.documentElement,{childList:true,subtree:true});

  // 메인 루프
  const loop=setInterval(async()=>{
    if(!S.run) return;
    await clickAllFollows(); render();

    // 100회 배수마다 정지
    if(S.totalSurf>0 && S.totalSurf%100===0){ setPaused(); return; }

    // 팔로우가 5번 연속 안 나오면 파도타기
    if(S.empty>=5){
      if(await surfNextProfile()){
        S.empty=0; S.scrolls=0;
      }
    }
  },700); // 체크 주기 약간 단축 (놓침 방지)
})();
