javascript:(async function() { 'use strict'; if (!window.XLSX) { var script = document.createElement('script'); script.src = 'https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js'; document.head.appendChild(script); await new Promise(function(resolve) { script.onload = resolve; }); } var gui = document.createElement('div'); gui.id = 'influencer-surfer-gui'; gui.innerHTML = '<div style="position: fixed; bottom: 20px; right: 20px; width: 350px; background: white; border: 2px solid #00c73c; border-radius: 12px; box-shadow: 0 4px 20px rgba(0,0,0,0.15); font-family: -apple-system, BlinkMacSystemFont, Segoe UI, sans-serif; z-index: 999999;"><div style="background: linear-gradient(135deg, #00c73c 0%, #00a030 100%); color: white; padding: 15px; border-radius: 10px 10px 0 0; font-weight: bold; font-size: 16px;">인플 서퍼 ver.2025.10.03</div><div style="padding: 20px;"><div style="text-align: center; margin-bottom: 15px; padding: 10px; background: #f8f9fa; border-radius: 6px; font-size: 13px; color: #333;">블로그 정보 토론방: <a href="https://open.kakao.com/o/gZmiqNDh" target="_blank" style="color: #00c73c; font-weight: bold; text-decoration: none; border-bottom: 1px solid #00c73c;">들어가기</a></div><div id="status-text" style="margin-bottom: 15px; font-size: 14px; color: #333; min-height: 60px;">초기화 중...</div><div id="progress-container" style="background: #f0f0f0; height: 8px; border-radius: 4px; margin-bottom: 15px; overflow: hidden;"><div id="progress-bar" style="background: linear-gradient(90deg, #00c73c 0%, #00e647 100%); height: 100%; width: 0%; transition: width 0.3s;"></div></div><div id="button-container" style="display: flex; gap: 10px; flex-direction: column;"></div></div></div>'; document.body.appendChild(gui); var statusText = document.getElementById('status-text'); var progressBar = document.getElementById('progress-bar'); var buttonContainer = document.getElementById('button-container'); addButton('❌ 종료', closeAndCleanup, '#ff4444'); function updateStatus(text, progress) { statusText.innerHTML = text; if (progress !== undefined) { progressBar.style.width = progress + '%'; } } function addButton(text, onClick, color) { if (!color) color = '#00c73c'; var btn = document.createElement('button'); btn.textContent = text; btn.style.cssText = 'padding: 12px; background: ' + color + '; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: bold; font-size: 14px; transition: all 0.2s;'; btn.onmouseover = function() { btn.style.transform = 'translateY(-2px)'; }; btn.onmouseout = function() { btn.style.transform = 'translateY(0)'; }; btn.onclick = onClick; buttonContainer.appendChild(btn); return btn; } function parseCountText(text) { if (!text) return { count: 0, isApprox: false }; var isApprox = false; var count = 0; if (text.includes('만+') || text.includes('만 +')) { isApprox = true; var numStr = text.replace(/[^0-9.]/g, ''); var num = parseFloat(numStr); if (!isNaN(num)) { count = Math.round(num * 10000); } } else { var numStr = text.replace(/,/g, ''); var num = parseInt(numStr); if (!isNaN(num)) { count = num; } } return { count: count, isApprox: isApprox }; } var allData = { followers: [], following: [] }; var totalFollowers = 0; var totalFollowing = 0; function closeAndCleanup() { allData = null; window.downloadExcel = null; window.unfollowOnly = null; window.followBack = null; gui.remove(); } try { updateStatus('페이지 확인 중...', 0); if (window.location.hostname !== 'in.naver.com') { throw new Error('네이버 인플루언서 홈 화면(in.naver.com)에서 실행해주세요.<br><br>예시: https://in.naver.com/본인아이디'); } var urlMatch = window.location.pathname.match(/\/([^\/]+)/); var urlId = urlMatch ? urlMatch[1] : null; if (!urlId) { throw new Error('본인의 인플루언서 홈 화면에서 실행해주세요.<br><br>예시: https://in.naver.com/본인아이디'); } updateStatus('사용자 정보를 확인하는 중...', 2); updateStatus('팬 목록 페이지로 이동 중...', 3); if (!window.location.pathname.includes('/myFan') && !window.location.pathname.includes('/myStar')) { var fanLink = document.querySelector('[data-role="fan"]'); if (fanLink) { fanLink.click(); await new Promise(function(resolve) { setTimeout(resolve, 1500); }); } } updateStatus('총 팬 수 확인 중...', 5); var tabs = document.querySelectorAll('[role="tab"]'); var isFollowersApprox = false; var isFollowingApprox = false; for (var i = 0; i < tabs.length; i++) { var tab = tabs[i]; var href = tab.getAttribute('href'); if (href && href.includes('/myFan')) { var em = tab.querySelector('em'); if (em) { var parsed = parseCountText(em.textContent); totalFollowers = parsed.count; isFollowersApprox = parsed.isApprox; } } else if (href && href.includes('/myStar')) { var em = tab.querySelector('em'); if (em) { var parsed = parseCountText(em.textContent); totalFollowing = parsed.count; isFollowingApprox = parsed.isApprox; } } } console.log('총 팔로워:', totalFollowers, isFollowersApprox ? '(최소)' : '', '총 팔로잉:', totalFollowing, isFollowingApprox ? '(최소)' : ''); updateStatus('계정 정보를 확인하는 중...', 8); var spaceId = null; if (window.__NEXT_DATA__) { try { var pageProps = window.__NEXT_DATA__.props.pageProps; if (pageProps) { spaceId = pageProps.spaceId; if (!spaceId && pageProps.initialState && pageProps.initialState.space) { spaceId = pageProps.initialState.space.spaceId; } } } catch (e) {} } if (!spaceId) { var scripts = document.querySelectorAll('script'); for (var i = 0; i < scripts.length; i++) { var content = scripts[i].textContent || ''; var match = content.match(/spaceId["\s:]+(\d+)/); if (match) { spaceId = match[1]; break; } } } if (!spaceId) { throw new Error('계정 정보를 찾을 수 없습니다. 페이지를 새로고침하고 다시 시도해주세요.'); } console.log('spaceId:', spaceId); updateStatus('나를 팬 한 목록을 가져오는 중...<br><span style="font-size: 12px; color: #666;">0명 수집 완료</span>', 15); var cursor = null; var page = 1; var baseUrl1 = 'https://gw.in.naver.com/home/api/v2/spaces/'; var endUrl1 = '/subscribes/followers?limit=20&subscriberType=SPACE&sort=RECENT'; while (true) { var apiUrl = baseUrl1 + spaceId + endUrl1; if (cursor) { apiUrl = baseUrl1 + spaceId + '/subscribes/followers?cursor=' + cursor + '&limit=20&subscriberType=SPACE&sort=RECENT'; } var response = await fetch(apiUrl, { credentials: 'include', headers: { 'accept': 'application/json, text/plain, */*', 'x-api-level': '11' } }); if (!response.ok) { throw new Error('팔로워 목록 가져오기 실패 (' + response.status + ')'); } var data = await response.json(); allData.followers.push.apply(allData.followers, data.data); var progressPercent = 15; if (totalFollowers > 0) { var calculated = (allData.followers.length / totalFollowers) * 35; if (isFollowersApprox) { progressPercent = 15 + Math.min(33, calculated); } else { progressPercent = 15 + Math.min(35, calculated); } } var countText = allData.followers.length + (totalFollowers > 0 ? ' / ' + (isFollowersApprox ? '약 ' : '') + totalFollowers.toLocaleString() + (isFollowersApprox ? '+' : '') : '') + '명 수집'; updateStatus('나를 팬 한 목록을 가져오는 중...<br><span style="font-size: 12px; color: #666;">' + countText + '</span>', progressPercent); if (!data.paging || !data.paging.nextCursor) break; cursor = data.paging.nextCursor; page++; await new Promise(function(resolve) { setTimeout(resolve, 300); }); } console.log('[팔로워 수집 완료] 총', allData.followers.length, '명 (예상:', totalFollowers + '명, 차이:', (totalFollowers - allData.followers.length) + '명)'); updateStatus('✓ 나를 팬 한: ' + allData.followers.length + '명<br><br>잠시 대기 중...', 50); await new Promise(function(resolve) { setTimeout(resolve, 2000); }); updateStatus('✓ 나를 팬 한: ' + allData.followers.length + '명<br><br>내가 팬 한 목록을 가져오는 중...<br><span style="font-size: 12px; color: #666;">0명 수집 완료</span>', 50); cursor = null; page = 1; var baseUrl2 = 'https://gw.in.naver.com/home/api/v2/spaces/'; var endUrl2 = '/subscribes/following?limit=20&sort=RECENT'; while (true) { var apiUrl = baseUrl2 + spaceId + endUrl2; if (cursor) { apiUrl = baseUrl2 + spaceId + '/subscribes/following?cursor=' + cursor + '&limit=20&sort=RECENT'; } var response = await fetch(apiUrl, { credentials: 'include', headers: { 'accept': 'application/json, text/plain, */*', 'x-api-level': '11' } }); if (!response.ok) { throw new Error('팔로잉 목록 가져오기 실패 (' + response.status + ')'); } var data = await response.json(); allData.following.push.apply(allData.following, data.data); var progressPercent = 50; if (totalFollowing > 0) { var calculated = (allData.following.length / totalFollowing) * 35; if (isFollowingApprox) { progressPercent = 50 + Math.min(33, calculated); } else { progressPercent = 50 + Math.min(35, calculated); } } var countText = allData.following.length + (totalFollowing > 0 ? ' / ' + (isFollowingApprox ? '약 ' : '') + totalFollowing.toLocaleString() + (isFollowingApprox ? '+' : '') : '') + '명 수집'; updateStatus('✓ 나를 팬 한: ' + allData.followers.length.toLocaleString() + '명<br><br>내가 팬 한 목록을 가져오는 중...<br><span style="font-size: 12px; color: #666;">' + countText + '</span>', progressPercent); if (!data.paging || !data.paging.nextCursor) break; cursor = data.paging.nextCursor; page++; await new Promise(function(resolve) { setTimeout(resolve, 1000); }); } console.log('[팔로잉 수집 완료] 총', allData.following.length, '명 (예상:', totalFollowing + '명, 차이:', (totalFollowing - allData.following.length) + '명)'); updateStatus('✓ 나를 팬 한: ' + allData.followers.length + '명<br>✓ 내가 팬 한: ' + allData.following.length + '명<br><br>데이터 분석 중...', 90); var followerIds = new Set(allData.followers.map(function(f) { return f.spaceId; })); var followingIds = new Set(allData.following.map(function(f) { return f.spaceId; })); var onlyIFollow = allData.following.filter(function(f) { return !followerIds.has(f.spaceId); }); var onlyFollowsMe = allData.followers.filter(function(f) { return !followingIds.has(f.spaceId); }); var mutual = allData.following.filter(function(f) { return followerIds.has(f.spaceId); }); updateStatus('✓ 나를 팬 한: ' + allData.followers.length + '명<br>✓ 내가 팬 한: ' + allData.following.length + '명<br>✓ 나만 팬 한: ' + onlyIFollow.length + '명<br>✓ 상대만 팬 한: ' + onlyFollowsMe.length + '명<br>✓ 서로 팬 한: ' + mutual.length + '명<br><br>엑셀 파일 생성 중...', 95); function formatData(items) { return items.map(function(item) { return { '닉네임': item.nickName, '키워드': item.myKeyword, '팬수': item.subscriberCount, 'URL ID': item.urlId, '프로필 URL': 'https://in.naver.com/' + item.urlId, '가입일': new Date(item.createdAt).toLocaleDateString('ko-KR'), '최근 콘텐츠': item.lastContentsCreatedAt ? new Date(item.lastContentsCreatedAt).toLocaleDateString('ko-KR') : '-' }; }); } var wb = XLSX.utils.book_new(); XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(formatData(allData.followers)), '나를 팬 한'); XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(formatData(allData.following)), '내가 팬 한'); XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(formatData(onlyIFollow)), '나만 팬 한'); XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(formatData(onlyFollowsMe)), '상대만 팬 한'); XLSX.utils.book_append_sheet(wb, XLSX.utils.json_to_sheet(formatData(mutual)), '서로 팬 한'); window.downloadExcel = function() { var timestamp = new Date().toISOString().slice(0, 10).replace(/-/g, ''); XLSX.writeFile(wb, '인플루언서_팬목록_' + timestamp + '.xlsx'); }; window.followBack = async function() { if (onlyFollowsMe.length === 0) { alert('맞팬할 대상이 없습니다.'); return; } if (!confirm('⚠️ 맞팬 수락\n\n"상대만 팬 한" ' + onlyFollowsMe.length + '명에게 맞팬합니다.\n완료까지 약 ' + Math.ceil(onlyFollowsMe.length * 1.2 / 60) + '분 소요됩니다.\n\n진행하시겠습니까?')) { return; } updateStatus('맞팬 수락 진행 중...<br><span style="font-size: 12px; color: #666;">0 / ' + onlyFollowsMe.length + '명 처리</span>', 0); var successCount = 0; var failCount = 0; for (var i = 0; i < onlyFollowsMe.length; i++) { var item = onlyFollowsMe[i]; try { var response = await fetch('https://in.naver.com/graphql', { method: 'POST', credentials: 'include', headers: { 'accept': '*/*', 'content-type': 'application/json', 'x-api-level': '11' }, body: JSON.stringify({ operationName: 'toggleSubscription', variables: { input: { subscribed: false, spaceId: item.spaceId, notification: true } }, query: 'mutation toggleSubscription($input: ToggleSubscriptionInput!) { toggleSubscription(input: $input) { activeChannelCount activeChannelTypes nickname spaceId __typename } }' }) }); if (response.ok) { successCount++; } else { failCount++; } } catch (e) { failCount++; console.error('맞팬 실패:', item.nickName, e); } var progress = ((i + 1) / onlyFollowsMe.length) * 100; updateStatus('맞팬 수락 진행 중...<br><span style="font-size: 12px; color: #666;">' + (i + 1) + ' / ' + onlyFollowsMe.length + '명 처리 (성공: ' + successCount + ', 실패: ' + failCount + ')</span>', progress); await new Promise(function(resolve) { setTimeout(resolve, 1000); }); } updateStatus('<div style="color: #00c73c; font-weight: bold; font-size: 15px; margin-bottom: 10px;">✓ 맞팬 수락 완료!</div><div style="font-size: 13px; line-height: 1.6; color: #555;">• 성공: ' + successCount + '명<br>• 실패: ' + failCount + '명<br>• 총 처리: ' + onlyFollowsMe.length + '명<br><br>계속해서 다른 작업을 진행할 수 있습니다.</div>', 100); buttonContainer.innerHTML = ''; addButton('📥 엑셀 다운로드', window.downloadExcel, '#00c73c'); if (onlyIFollow.length > 0) { addButton('🗑️ 뒷삭 제거 (' + onlyIFollow.length + '명)', window.unfollowOnly, '#ff6b6b'); } addButton('❌ 종료', closeAndCleanup, '#ff4444'); }; window.unfollowOnly = async function() { if (onlyIFollow.length === 0) { alert('뒷삭할 대상이 없습니다.'); return; } if (!confirm('⚠️ 뒷삭 제거\n\n"나만 팬 한" ' + onlyIFollow.length + '명을 팬 취소합니다.\n이 작업은 되돌릴 수 없으며, 완료까지 약 ' + Math.ceil(onlyIFollow.length * 1.2 / 60) + '분 소요됩니다.\n\n진행하시겠습니까?')) { return; } updateStatus('뒷삭 제거 진행 중...<br><span style="font-size: 12px; color: #666;">0 / ' + onlyIFollow.length + '명 처리</span>', 0); var successCount = 0; var failCount = 0; for (var i = 0; i < onlyIFollow.length; i++) { var item = onlyIFollow[i]; try { var response = await fetch('https://in.naver.com/graphql', { method: 'POST', credentials: 'include', headers: { 'accept': '*/*', 'content-type': 'application/json', 'x-api-level': '11' }, body: JSON.stringify({ operationName: 'toggleSubscription', variables: { input: { subscribed: true, spaceId: item.spaceId, notification: false } }, query: 'mutation toggleSubscription($input: ToggleSubscriptionInput!) { toggleSubscription(input: $input) { activeChannelCount activeChannelTypes nickname spaceId __typename } }' }) }); if (response.ok) { successCount++; } else { failCount++; } } catch (e) { failCount++; console.error('팬 취소 실패:', item.nickName, e); } var progress = ((i + 1) / onlyIFollow.length) * 100; updateStatus('뒷삭 제거 진행 중...<br><span style="font-size: 12px; color: #666;">' + (i + 1) + ' / ' + onlyIFollow.length + '명 처리 (성공: ' + successCount + ', 실패: ' + failCount + ')</span>', progress); await new Promise(function(resolve) { setTimeout(resolve, 1000); }); } updateStatus('<div style="color: #00c73c; font-weight: bold; font-size: 15px; margin-bottom: 10px;">✓ 뒷삭 제거 완료!</div><div style="font-size: 13px; line-height: 1.6; color: #555;">• 성공: ' + successCount + '명<br>• 실패: ' + failCount + '명<br>• 총 처리: ' + onlyIFollow.length + '명<br><br>모든 작업이 완료되었습니다.</div>', 100); buttonContainer.innerHTML = ''; addButton('📥 엑셀 다운로드', window.downloadExcel, '#00c73c'); addButton('❌ 종료', closeAndCleanup, '#ff4444'); }; updateStatus('<div style="color: #00c73c; font-weight: bold; font-size: 15px; margin-bottom: 10px;">✓ 작업 완료!</div><div style="font-size: 13px; line-height: 1.6; color: #555;">• 나를 팬 한: ' + allData.followers.length + '명' + (totalFollowers && totalFollowers !== allData.followers.length ? ' <span style="color: #999;">(웹화면 상 표시: ' + totalFollowers + '명)</span>' : '') + '<br>• 내가 팬 한: ' + allData.following.length + '명' + (totalFollowing && totalFollowing !== allData.following.length ? ' <span style="color: #999;">(웹화면 상 표시: ' + totalFollowing + '명)</span>' : '') + '<br>• 나만 팬 한: ' + onlyIFollow.length + '명<br>• 상대만 팬 한: ' + onlyFollowsMe.length + '명<br>• 서로 팬 한: ' + mutual.length + '명<br><br><span style="font-size: 11px; color: #999;">💡 차이는 차단/탈퇴 계정 등으로 인한 것일 수 있습니다.<br>F12 → Console 탭에서 상세 로그를 확인하세요.</span></div>', 100); buttonContainer.innerHTML = ''; addButton('📥 엑셀 다운로드', window.downloadExcel, '#00c73c'); if (onlyFollowsMe.length > 0) { addButton('💚 맞팬 수락 (' + onlyFollowsMe.length + '명)', window.followBack, '#4CAF50'); } if (onlyIFollow.length > 0) { addButton('🗑️ 뒷삭 제거 (' + onlyIFollow.length + '명)', window.unfollowOnly, '#ff6b6b'); } addButton('❌ 종료', closeAndCleanup, '#ff4444'); } catch (error) { console.error('오류 상세:', error); updateStatus('<div style="color: #ff4444; font-weight: bold;">❌ 오류 발생</div><div style="font-size: 12px; margin-top: 8px; color: #666;">' + error.message + '</div>', 0); buttonContainer.innerHTML = ''; addButton('❌ 종료', closeAndCleanup, '#ff4444'); } })();
